openapi: 3.0.0
info:
  title: Termly API
  description: |-
    Termly Public API
  version: v1
servers:
- url: https://api.termly.io/v1
security:
- apiKey: []
paths:
  /collaborators:
    get:
      description: Retrieve the specific collaborators for an account. If all the collaborators for an account should be retrieved then do not send the `id` parameter
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    id:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/collaboratorResponse'  
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyGET'                    
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      tags:
      - account
      requestBody:
        description: Create new collaborators
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to create the collaborator on
                  email:
                    type: string
                    description: email address of collaborator
                  role:
                    type: string
                    description: role that the collaborator has
                    enum: ['none', 'editor', 'admin', 'owner']
                  website_ids:
                    type: array
                    description: ids of the websites that the collaborator has access to (only required for the `editor` role)
                    items:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/collaboratorResponse'  
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBody'                    
                    - $ref: '#/components/schemas/validationErrorBody'  
              examples:
                success:
                  value:
                    - email: john@doe.com
                      id: col_123
                      role: editor
                      invitation_URL: 'http://termly.io/invitation'
                      invitation_status: pending
                      account_id: acc_123
                      websites: [web_123, web_124]
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  
    put:
      tags:
      - account
      requestBody:
        description: Update existing collaborators
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to retrieve the object from
                  id:
                    type: string
                    description: ID of the collaborator to update
                  role:
                    type: string
                    description: role that the collaborator has (only required for the `editor` role)
                    enum: ['none', 'editor', 'admin', 'owner']
                  website_ids:
                    type: array
                    description: ids of the websites that the collaborator has access to
                    items:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/collaboratorResponse'  
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBody'
                    - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - email: john@doe.com
                      first_name: John
                      id: col_123
                      last_name: Doe
                      role: editor
                      invitation_status: pending
                      account_id: acc_123
                      websites: [web_123, web_124]
                      _idx: 3
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  
    delete:
      tags:
      - account
      requestBody:
        description: delete existing collaborators
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to retrieve the object from
                  id:
                    type: string
                    description: ID of the collaborator to delete
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        account_id:
                          type: string
                          description: ID of the account to retrieve the object from
                        id:
                          type: string
                          description: ID of the collaborator to delete
                        _idx:
                          type: string
                          description: index of item in request array this responses corresponds to (index starts at 0) 
                    - $ref: '#/components/schemas/errorBody'
              examples:
                success:
                  value:
                    - collaborator_id: col_123
                      account_id: acc_123
                      _idx: 4
                object_not_found:
                  value:
                    - _idx: 1
                      error: object_not_found
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  

  /websites:
    get:
      description: retrieve the specific websites for an account. If all the websites for an account should be retrieved then do not send the `id` parameter
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    id:
                      type: array
                      items:
                        type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/websiteResponse'  
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyGET'                    
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      tags:
      - account
      requestBody:
        description: Create new website
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      account_id:
                        type: string
                        description: ID of the account to retrieve the object from
                  - $ref: '#/components/schemas/websiteRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/websiteResponse'  
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBody'
                    - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - name: termly
                      id: web_123
                      url: http://termly.io
                      uuid: 49a2570a-918c-4e2f-9417-952e2442369b
                      page_views: 0
                      report:
                        id: rep_124
                        created_at: 2021-01-01 13:08
                      scan_period: trimonthly
                      subdomain: []
                      scan_status: null
                      cookie_count: null
                      unclassified_cookie_count: null
                      company:
                        legal_name: Termly LLC
                        email: support@termly.io
                        phone: 111-222-3333
                        fax: 111-222-4444
                        address: 1 Termly Way
                        zip: 11111
                        state: TE
                        city: Termly
                        country: USA
                      old_cookie_policy: null
                      consent_count: 0
                      code_snippet:
                        banner: "<script>\n  (function () {\n    var s = document.createElement('script');\n    s.type = 'text/javascript';\n    s.async = true;\n    s.src = 'http://localhost/embed.min.js';\n    s.id = '49a2570a-918c-4e2f-9417-952e2442369b';\n    s.setAttribute(\"data-name\", \"termly-embed-banner\");\n    var x = document.getElementsByTagName('script')[0];\n    x.parentNode.insertBefore(s, x);\n  })();\n</script>\n"
                        cookie_preference_button: "<button type=\"button\" style=\"background: white; width: 165px; height: 30px; border-radius: 3px; border: 1px solid #5f7d9c; font-family: Roboto, Arial; font-size: 10px; color: #5f7d9c; font-weight: 600; box-sizing: border-box; cursor: pointer; padding: 0; outline: none;\" onclick=\"displayPreferenceModal()\">Manage Cookie Preferences</button>\n"
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    put:
      tags:
      - account
      requestBody:
        description: Update existing website
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                - $ref: '#/components/schemas/websiteRequest'
                - type: object
                  properties:
                    account_id:
                      type: string
                      description: ID of the account to retrieve the object from
                    id:
                      type: string
                      description: ID of the website to update
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/websiteResponse'  
                      - $ref: '#/components/schemas/_idx'  
                    - $ref: '#/components/schemas/errorBody'
                    - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - name: termly
                      id: web_123
                      url: http://termly.io
                      uuid: 49a2570a-918c-4e2f-9417-952e2442369b
                      page_views: 0
                      report:
                        id: rep_124
                        created_at: 2021-01-01 13:08
                      scan_period: trimonthly
                      subdomain: []
                      scan_status: null
                      cookie_count: null
                      unclassified_cookie_count: null
                      company:
                        legal_name: Termly LLC
                        email: support@termly.io
                        phone: 111-222-3333
                        fax: 111-222-4444
                        address: 1 Termly Way
                        zip: 11111
                        state: TE
                        city: Termly
                        country: USA
                      old_cookie_policy: null
                      consent_count: 0
                      code_snippet:
                        banner: "<script>\n  (function () {\n    var s = document.createElement('script');\n    s.type = 'text/javascript';\n    s.async = true;\n    s.src = 'http://localhost/embed.min.js';\n    s.id = '49a2570a-918c-4e2f-9417-952e2442369b';\n    s.setAttribute(\"data-name\", \"termly-embed-banner\");\n    var x = document.getElementsByTagName('script')[0];\n    x.parentNode.insertBefore(s, x);\n  })();\n</script>\n"
                        cookie_preference_button: "<button type=\"button\" style=\"background: white; width: 165px; height: 30px; border-radius: 3px; border: 1px solid #5f7d9c; font-family: Roboto, Arial; font-size: 10px; color: #5f7d9c; font-weight: 600; box-sizing: border-box; cursor: pointer; padding: 0; outline: none;\" onclick=\"displayPreferenceModal()\">Manage Cookie Preferences</button>\n"
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    delete:
      tags:
      - account
      requestBody:
        description: delete existing website
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to delete the object from
                  id:
                    type: string
                    description: ID of the website to delete
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      oneOf:
                        - allOf:
                          - type: object
                            properties:
                              account_id:
                                type: string
                                description: ID of the account to retrieve the object from
                              id:
                                type: string
                                description: ID of the website to delete
                          - $ref: '#/components/schemas/_idx'
                        - $ref: '#/components/schemas/errorBodyForObject'
                  paging:
                    $ref: '#/components/schemas/paging'
              examples:
                success:
                  value:
                    - id: web_123
                      account_id: acc_123
                      _idx: 2
                object_not_found:
                  $ref: '#/components/examples/object_not_found'   

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  
  /websites/custom_consent_themes:
    get:
      description: Retrieve the specific custom consent theme for an account.  If all the custom consent themes for the website should be retrieved then do not send the `id` parameter
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    website_id:
                      type: string
                    id:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/customThemeResponse'  
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyWithWebsiteGET'
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    post:
      tags:
      - account
      requestBody:
        description: Create new custom theme
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      account_id:
                        type: string
                        description: ID of the account to create the object for
                  - $ref: '#/components/schemas/customThemeRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                  type: array
                  items:
                    oneOf:
                      - allOf:
                        - $ref: '#/components/schemas/customThemeResponse'  
                        - $ref: '#/components/schemas/_idx'  
                      - $ref: '#/components/schemas/errorBody'
                      - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - id: cct_123
                      webite_id: web_123
                      name: my theme
                      font_family: Times New Roman
                      font_size: 4
                      font_color: #000000
                      background: #000000
                      btn_background: #000000
                      btn_text_color: #000000
                      _idx: 2
                object_not_found:
                  $ref: '#/components/examples/object_not_found_with_website'
                validation_error: 
                  $ref: '#/components/examples/validation_error_with_website'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    put:
      tags:
      - account
      requestBody:
        description: Update existing custom theme
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                - $ref: '#/components/schemas/customThemeRequest'
                - type: object
                  properties:
                    account_id:
                      type: string
                      description: ID of the account to update the object on
                    website_id:
                      type: string
                      description: ID of the website to update the object on
                    id:
                      type: string
                      description: ID of the consent theme
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                  type: array
                  items:
                    oneOf:
                      - allOf:
                        - $ref: '#/components/schemas/customThemeResponse'  
                        - $ref: '#/components/schemas/_idx'  
                      - $ref: '#/components/schemas/errorBodyForObject'
                      - $ref: '#/components/schemas/validationErrorBodyForObject'
              examples:
                success:
                  value:
                    - id: cct_123
                      webite_id: web_123
                      name: my theme
                      font_family: Times New Roman
                      font_size: 4
                      font_color: #000000
                      background: #000000
                      btn_background: #000000
                      btn_text_color: #000000
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    delete:
      tags:
      - account
      requestBody:
        description: delete existing custom theme
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to delete the object from
                  website_id:
                    type: string
                    description: ID of the website to delete the object from
                  id:
                    type: string
                    description: ID of the custom consent theme to delete
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - type: object
                        properties:
                          website_id:
                            type: string
                            description: ID of the website to delete the object from
                          account_id:
                            type: string
                            description: ID of the account to delete the object from
                          id:
                            type: string
                            description: ID of the consent theme to delete
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBodyForObject'
              examples:
                success:
                  value:
                    - id: cct_123
                      website_id: web_123
                      account_id: acc_123
                      _idx: 3
                object_not_found:
                  $ref: '#/components/examples/object_not_found'   

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  

  /websites/cookies:
    post:
      tags:
      - account
      requestBody:
        description: Create new cookie
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                  - type: object
                    properties:
                      account_id:
                        type: string
                        description: ID of the account to retrieve the object from
                  - $ref: '#/components/schemas/cookieRequest'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/cookieResponse'  
                      - $ref: '#/components/schemas/_idx'  
                    - $ref: '#/components/schemas/errorBodyForObject'
                    - $ref: '#/components/schemas/validationErrorBodyForObject'
              examples:
                success:
                  value:
                    - id: coo_123,
                      website_id: web_123
                      name: google,
                      category: essential,
                      tracker_type: http_cookie,
                      country: United States,
                      domain: google.com,
                      source: Google,
                      initiator: string,
                      new: true,
                      en_us: google tracking,
                      en_uk: google tracking,
                      fr: suivi google,
                      de: Google-Tracking,
                      url: termly.io/index.html,
                      value: bid=gdo9o1&newuser=1&google_gid=CAESEO9xPMcub0AQ_VlCxYCqU&google_cver=1,
                      service: Google,
                      service_policy_link: https://policies.google.com/privacy?hl=en-US,
                      expire: 1111,
                      party_provider_type: termly
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    put:
      tags:
      - account
      requestBody:
        description: Update existing cookie
        content:
          application/json:
            schema:
              type: array
              items:
                allOf:
                - $ref: '#/components/schemas/cookieRequest'
                - type: object
                  properties:
                    account_id:
                      type: string
                      description: ID of the account to update the object for
                    website_id:
                      type: string
                      description: ID of the website to update the object for
                    id:
                      type: string
                      description: ID of the website to update
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/cookieResponse'  
                      - $ref: '#/components/schemas/_idx'  
                    - $ref: '#/components/schemas/errorBody'
                    - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - id: coo_123,
                      website_id: web_123
                      name: google,
                      category: essential,
                      tracker_type: http_cookie,
                      country: United States,
                      domain: google.com,
                      source: Google,
                      initiator: string,
                      new: true,
                      en_us: google tracking,
                      en_uk: google tracking,
                      fr: suivi google,
                      de: Google-Tracking,
                      url: termly.io/index.html,
                      value: bid=gdo9o1&newuser=1&google_gid=CAESEO9xPMcub0AQ_VlCxYCqU&google_cver=1,
                      service: Google,
                      service_policy_link: https://policies.google.com/privacy?hl=en-US,
                      expire: 1111,
                      party_provider_type: termly
                      _idx: 1
                object_not_found:
                  $ref: '#/components/examples/object_not_found_with_website'
                validation_error: 
                  $ref: '#/components/examples/validation_error_with_website'

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
    delete:
      tags:
      - account
      requestBody:
        description: delete existing cookie
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account_id:
                    type: string
                    description: ID of the account to retrieve the object from
                  website_id:
                    type: string
                    description: ID of the website to retrieve the object from
                  id:
                    type: string
                    description: ID of the cookie to delete
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - type: object
                        properties:
                          website_id:
                            type: string
                            description: ID of the website to delete the object from
                          account_id:
                            type: string
                            description: ID of the account to delete the object from
                          id:
                            type: string
                            description: ID of the cookie to delete
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBody'
              examples:
                success:
                  value:
                    - id: cct_123
                      website_id: web_123
                      account_id: acc_123
                      _idx: 2
                object_not_found:
                  $ref: '#/components/examples/object_not_found'   

        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'  
  /domains/documents/preview:
    get:
      description: Preview the documents. If all the documents for the website should be retrieved then do not send the `id` parameter
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    website_id:
                      type: string
                    id:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results: 
                    type: array
                    items:
                      type: object
                      properties:
                        account_id:
                          type: string 
                          description: account ID
                        website_id: 
                          type: string
                          description: website ID
                        id:  
                          type: string
                          description: document id
                        document:
                          type: string
                          description: base64 encoded document
                  errors: 
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyWithWebsiteGET'                     
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  /domains/documents/publish_cookie_policies:
    post:
      tags:
      - account
      requestBody:
        description: publish cookie policy
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      account_id:
                        type: string
                        description: ID of the account to retrieve the object from                
                      website_id:
                        type: string
                        description: ID of the website to publish the cookie policy for
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - type: object
                        properties:
                          account_id:
                            type: string
                            description: ID of the account to retrieve the object from                
                          website_id:
                            type: string
                            description: ID of the website to publish the cookie policy for                            
                      - $ref: '#/components/schemas/_idx'
                    - $ref: '#/components/schemas/errorBody'
              examples:
                success:
                  value:
                    - account_id: acc_123
                      website_id: web_123
                      _idx: 3
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
  /domains/scan_report:
    get:
      description: retrieve the latest scan for the website
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    website_id:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        account_id:
                          type: string 
                          description: account ID
                        website_id: 
                          type: string
                          description: website ID
                        status:
                          type: string
                          description: status of current scan
                        pages:
                          type: string
                          description: number of pages scanned
                        cookies:
                          type: array
                          description: list of cookies
                          items:
                            $ref: '#/components/schemas/cookieResponse'
                        scanned_domains:
                          type: array
                          description: list of domains scanned
                          items:
                            type: string
                        detected_consent_banner:
                          type: boolean
                          description: true if the termly banner is detected on the site
                        detected_cookie_preference:
                          type: boolean 
                          description: true if the cookie preference button is on the page
                        scan_failure_message:
                          type: string
                          description: message describing any scan failure
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyWebsiteOnlyGET'                     
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
  /domains/banners:
    get:
      description: return the banner settings.  There is only 1 banner settings per website
      tags:
      - account
      parameters:
        - in: query
          name: 'query'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    account_id:
                      type: string
                    website_id:
                      type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/bannerObject'
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/errorBodyWebsiteOnlyGET'
                  paging:
                    $ref: '#/components/schemas/paging'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500'
    put:
      tags:
      - account
      requestBody:
        description: update the banner settings
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  items:
                    allOf:
                      - type: object
                        properties:
                          account_id:
                            type: string
                            description: ID of the account to retrieve the object from                
                          website_id:
                            type: string
                            description: ID of the website to publish the cookie policy for
                      - $ref: '#/components/schemas/bannerObject'
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - allOf:
                      - $ref: '#/components/schemas/bannerObject'                           
                      - $ref: '#/components/schemas/_idx'                           
                    - $ref: '#/components/schemas/errorBody'
                    - $ref: '#/components/schemas/validationErrorBody'
              examples:
                success:
                  value:
                    - id: coo_123,
                      website_id: web_123
                      _idx: 2
                object_not_found:
                  $ref: '#/components/examples/object_not_found'
                validation_error: 
                  $ref: '#/components/examples/validation_error'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'
        500:
          $ref: '#/components/responses/500' 
components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: api_key
      in: header
  examples:
    object_not_found:
      value:
        - error: object_not_found
          _idx: 3
    object_not_found_with_website:
      value:
        - _idx: 3
          error: object_not_found         
    validation_error:
      value:
        - _idx: 3
          error: object_not_found
          validation_errors: 
            - field: email
              message: cannot be blank
    validation_error_with_website:
      value:
        items:
          - _idx: 3
            error: validation_error
            validation_errors: 
              - field: email
                message: cannot be blank
        paging:
          count: 100
          current_page: 2
          next_page: https://api.termly.io/api/page3
          previous_page: https://api.termly.io/api/page1
          per_page: 100
          total_count: 990
          total_pages: 10            
  responses:
    400:
      description: "Bulk request exceeded limits. error: `too_many_items`"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorBody'
    401:
      description: "API Key is not correct or has been disabled. error: `unauthorized`"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorBody'
    403:
      description: "API Key is correct but the API key does not have permission to perform the requested action on 1 or more of the items in the request. error: `forbidden`"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorBody'
    500:
      description: "An unexpected error was encountered. error: `server_error`"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorBody'                
  schemas:
    paging:
      type: object
      properties:
        count:
          type: integer
          description: number of items on this paginate
        current_page:
          type: integer
          description: current page number
        next_page: 
          type: string
          description: URL to the next page
        previous_page: 
          type: string
          description: URL to the next page
        per_page: 
          type: integer
          description: total number of items per page
        total_count:
          type: integer
          description: total count of items found
        total_pages:
          type: integer
          description: total number of pages
    bannerObject:
      type: object
      properties:
        id: 
          type: string
          description: consent theme ID
        display_style:
          type: string
          description: how the cookie banner is displayed
          enum: ['banner', 'modal', 'tooltip']
        position:
          type: string
          description: position of the banner
          enum: ['bottom', 'bottom_left', 'bottom_right', 'top', 'top_left', 'top_right']
        theme_color:
          type: string
          description: theme color
          enum: ['blue', 'light', 'green', 'red', 'black', 'navy_blue']
        auto_accept_on_scroll:
          type: boolean
          description: when the user scrolls it is accepted as consent
        display_consent_banner_by_region:
          type: boolean
          description: whether or not to use regon specific settings
        show_cookie_preference:
          type: boolean
          description: show the cookie preferences button in the banner
        avaliable_langauges:
          type: array
          description: languages that area avaliable for end user in the banner
          enum: ['en', 'de', 'fr', 'es', 'it', 'pt']
        personalized_content:
          type: boolean
          description: toggle to indicate if the website has content that is personalized for the user
        running_targeted_advertising:
          type: boolean
          description: is there targeted advertisement on the website.
        share_data_to_3rd_party:
          type: boolean
          description: does the webstie share data with 3rd parties
        website_id:
          type: string
          description: ID of the website
        account_id:
          type: string
          description: account_id
    cookieRequest:
      type: object
      properties:
        website_id:
          type: string
          description: id of website
        name:
          type: string
          description: name of cookie
        category:
          type: string
          description: cookie category
          enum: ['unclassified', 'essential', 'performance', 'analytics', 'advertising', 'social_networking']
        tracker_type:
          type: string
          description: type of tracker
          enum: ['indexed_db', 'http_cookie', 'html_local_storage', 'html_session_storage', 'server_cookie', 'pixel_tracker']
        country:
          type: string
          description: country of cookie
        domain:
          type: string
          description: the cookies domain
        source:
          type: string
          description: company that created the cookie
        initiator:
          type: string
          description: how the cookie was initiated
        new:
          type: boolean
          description:  was the cookie new in the last scan
        en_us:
          type: string
          description: description in english
        en_uk:
          type: string
          description: description in UK english
        fr:
          type: string
          description: description in French
        de:
          type: string
          description: description in German
        url:
          type: string
          description: URL where the cookie was loaded (page of the scanned site)
        value:
          type: string
          description: value of the cookie
        service:
          type: string
          description: service thate created the cookie
        service_policy_link:
          type: string
          description: privacy policy of the service
        expire:
          type: string
          description: expieration expressed in seconds
    cookieResponse:
      type: object
      properties:
        id:
          type: string 
          description: id of cookie
        website_id:
          type: string
          description: id of website
        name:
          type: string
          description: name of cookie
        category:
          type: string
          description: cookie category
          enum: ['unclassified', 'essential', 'performance', 'analytics', 'advertising', 'social_networking']
        tracker_type:
          type: string
          description: type of tracker
          enum: ['indexed_db', 'http_cookie', 'html_local_storage', 'html_session_storage', 'server_cookie', 'pixel_tracker']
        country:
          type: string
          description: country of cookie
        domain:
          type: string
          description: the cookies domain
        source:
          type: string
          description: company that created the cookie
        initiator:
          type: string
          description: how the cookie was initiated
        new:
          type: boolean
          description:  was the cookie new in the last scan
        en_us:
          type: string
          description: description in english
        en_uk:
          type: string
          description: description in UK english
        fr:
          type: string
          description: description in French
        de:
          type: string
          description: description in German
        url:
          type: string
          description: URL where the cookie was loaded (page of the scanned site)
        value:
          type: string
          description: value of the cookie
        service:
          type: string
          description: service thate created the cookie
        service_policy_link:
          type: string
          description: privacy policy of the service
        expire:
          type: string
          description: expieration expressed in seconds
        party_provider_type:
          type: string
          description: whether the party is first or third party
    customThemeRequest:
      type: object
      properties:
        website_id: 
          type: string
        name:
          type: string
        font_family:
          type: string
        font_size:
          type: string
        color:
          type: string
          description: hex color
        background: 
          type: string
          description: hex color
        btn_background: 
          type: string
          description: hex color
        btn_text_color: 
          type: string
          description: hex color         
    customThemeResponse:
      type: object
      properties:
        id:
          type: string
        website_id: 
          type: string
        name:
          type: string
        font_family:
          type: string
        font_size:
          type: string
        color:
          type: string
          description: hex color
        background: 
          type: string
          description: hex color
        btn_background: 
          type: string
          description: hex color
        btn_text_color: 
          type: string
          description: hex color                  
    websiteResponse:
      type: object
      properties:
        account_id:
          type: string
          description: ID of the account
        id:
          type: string
          description: ID of the website
        name:
          type: string
          description: name of the website
        url:
          type: string
          description: url of the website
        uuid:
          type: string
          description: UUID for snippets
        page_views:
          type: integer
          description: number of page views
        scan_period:
          type: string
          description: period of scan
        report: 
          type: object
          properties:
            id: 
              type: string
            created_at:
              type: string
        subdomains:
          type: array
          description: array of subdomains to scan
          items:
            type: string
        scan_status:
          type: string
          description: latest scan status
          enum: ['scanning', 'success', 'error']
        cookie_count:
          type: integer
          description: total number of cookies found
        cookie_policy_document_id:
          type: string
        unclassified_cookie_count:
          type: integer
          description: number of unclassified cookies
        company:
          type: object
          description: company information
          properties:
            legal_name:
              type: string
              description: legal name of the company
            email:
              type: string
              description: public contact email for the compnay
            phone:
              type: string
              description: public phone number for company
            fax:
              type: string
              description: company fax number
            address:
              type: string
              description: street address of the company
            zip:
              type: string
              description: zip code for the company
            state:
              type: string
              description: state
            city:
              type: string
              description: city
            country:
              type: string
              description: country
        consent_count:
          type: integer
          description: number of ucsers who have consented to cookies
        code_snippet:
          type: object
          properties:
            banner:
              type: string
              description: Javascript snippet to install the banner on the website
            cookie_preference_button:
              type: string
              description: Javascript snippet to install the preferences button on the website
    websiteRequest:
      type: object
      properties:
        name:
          type: string
          description: name of the website
        url:
          type: string
          description: url of the website
        logo:
          type: object
          properties:
            file_name:
              type: string
              description: name of the file including file extension
            file:
              type: string
              description: base 64 encoded file
        subdomains:
          type: array
          description: array of subdomains to scan
          items:
            type: string
        company:
          type: object
          description: company information
          properties:
            legal_name:
              type: string
              description: legal name of the company
            email:
              type: string
              description: public contact email for the compnay
            phone:
              type: string
              description: public phone number for company
            fax:
              type: string
              description: company fax number
            address:
              type: string
              description: street address of the company
            zip:
              type: string
              description: zip code for the company
            state:
              type: string
              description: state
            city:
              type: string
              description: city
            country:
              type: string
              description: country
    collaboratorResponse:
      type: object
      properties:
        account_id:
          type: string
          description: id of the parent account
        avatar:
          type: string
          description: avatar of collaborator
        email:
          type: string
          description: email address of the collaborator
        first_name:
          type: string
          description: first name of collaborator
        id:
          type: string
          description: collaborator ID
        last_name:
          type: string
          description: last name of collaborator
        role:
          type: string
          description: collaborator's role
        invitation_URL:
          type: string
          description: URL for collaborator to complete sign up
        invitation_status:
          type: string
          description: current status of invitation
        websites:
          type: array
          description: websites the collaborator's role applies to
          items:
            type: string
    
    _idx:
      type: object
      properties:
        _idx:
          type: string
          description: index of item in request array this responses corresponds to (index starts at 0)
    errorBody:
      type: object
      properties:
        error: 
          type: string
          description: error code        
        _idx:
          type: string
          description: index of item in request array this responses corresponds to (index starts at 0)
    errorBodyGET:
      type: object
      properties:
        error: 
          type: string
          description: error code        
        account_id:
          type: string
          description: ID of the account that the object was resquested for
        id:
          type: string
          description: ID of the object being requested
    errorBodyWebsiteOnlyGET:
      type: object
      properties:
        error: 
          type: string
          description: error code        
        account_id:
          type: string
          description: ID of the account that the object was resquested for
        website_id:
          type: string
          description: ID of the website that the object was resquested for
    errorBodyWithWebsiteGET:
      type: object
      properties:
        error: 
          type: string
          description: error code        
        account_id:
          type: string
          description: ID of the account that the object was resquested for
        website_id:
          type: string
          description: ID of the website that the object was resquested for
        id:
          type: string
          description: ID of the object being requested
    validationErrorBody:
      allOf:
        - $ref: '#/components/schemas/validationErrorBody'
        - type: object
          properties:
            validation_errors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: name of the field or `object` if validation error applies to the entire object
                  message:
                    type: string
                    description: describe the validation error    
    errorBodyCollaborator:
      allOf:
        - $ref: '#/components/schemas/errorBody'
        - type: object
          properties:
            collaborator_id:
              type: string
              description: ID of collaborator that was operated on
    validationErrorBodyCollaborator:
      allOf:
        - $ref: '#/components/schemas/errorBodyCollaborator'
        - type: object
          properties:
            collaborator_id:
              type: string
              description: ID of collaborator that was operated on
           
    errorBodyWebsite:
      allOf:
        - $ref: '#/components/schemas/errorBody'
        - type: object
          properties:
            website_id:
              type: string
              description: ID of website
    validationErrorBodyWebsite:
      allOf:
        - $ref: '#/components/schemas/validationErrorBody'
        - type: object
          properties:
            website_id:
              type: string
              description: ID of website  


    validationErrorBodyForObject:
      allOf:
        - $ref: '#/components/schemas/validationErrorBody'
        - type: object
          properties:
            object_id:
              type: string
              description: ID of object that was operated on   
    errorBodyForObjectWithWebsite:
      allOf:
        - $ref: '#/components/schemas/errorBodyForObject'
        - type: object
          properties:
            website_id:
              type: string
              description: ID of website
    validationErrorBodyForObjectWithWebsite:
      allOf:
        - $ref: '#/components/schemas/validationErrorBodyForObject'
        - type: object
          properties:
            website_id:
              type: string
              description: ID of website            
    errorBodyForObject:
      type: object
      properties:
        change_me:
          type: string
        
